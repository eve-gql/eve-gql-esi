name: Docker

on:
  push:
    branches: ['main']
  paths:
    - 'src/**'
    - 'package.json'
    - 'Dockerfile'

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Configure AWS Credentials for github actions
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::384843744163:role/GitHub
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/eve-gql-esi
          tags: ${{ github.sha }},latest
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Hashicorp - Terraform setup
        uses: hashicorp/setup-terraform@v3.1.2

      - name: Configure AWS Credentials for github actions
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::384843744163:role/GitHub

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: |
          terraform fmt -recursive
          terraform validate
        continue-on-error: false

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=terraform.tfplan

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}.tfplan
          path: ./terraform/terraform.tfplan
          overwrite: true
          retention-days: 1
  apply:
    name: Terraform Apply
    needs: plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Hashicorp - Terraform setup
        uses: hashicorp/setup-terraform@v3.1.2

      - name: Configure AWS Credentials for github actions
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::384843744163:role/GitHub

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ github.sha }}.tfplan
          path: ./terraform

      - name: Terraform Apply
        working-directory: ./terraform
        run: |
          terraform init
          terraform apply -auto-approve terraform.tfplan
