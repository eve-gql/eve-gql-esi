#
name: Do Everything (for now)

# Configures this workflow to run every time a change is pushed to the branch called `main`.
on:
  push:
    branches: ['main']

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      id-token: write
      #
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Configure AWS Credentials for github actions
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::384843744163:role/GitHub
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.ECR_REGISTRY }}/eve-gql-esi
      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see [Usage](https://github.com/docker/build-push-action#usage) in the README of the `docker/build-push-action` repository.
      # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  plan:
    # The type of runner that the job will run on
    name: Terraform Plan
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Hashicorp - Terraform setup
        uses: hashicorp/setup-terraform@v3.1.2

      - name: Configure AWS Credentials for github actions
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::384843744163:role/GitHub

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: |
          terraform fmt -recursive
          terraform validate
        continue-on-error: false

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=terraform.tfplan

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}.tfplan
          path: ./terraform/terraform.tfplan
          overwrite: true
          retention-days: 1
  apply:
    name: Terraform Apply
    needs: plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Hashicorp - Terraform setup
        uses: hashicorp/setup-terraform@v3.1.2

      - name: Configure AWS Credentials for github actions
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::384843744163:role/GitHub

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ github.sha }}.tfplan
          path: ./terraform

      - name: Terraform Apply
        working-directory: ./terraform
        run: |
          terraform init
          terraform apply -auto-approve terraform.tfplan
